% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/factorGettingFuncs.R
\name{getfactor}
\alias{getfactor}
\alias{gf.mkt_cap}
\alias{gf.float_cap}
\alias{gf.ln_mkt_cap}
\alias{gf.ln_float_cap}
\alias{gf.NP_YOY}
\alias{gf.pct_chg_per}
\alias{gf.totalshares}
\alias{gf.totalmarketvalue}
\alias{gf.floatMarketValue}
\alias{gf.PE_lyr}
\alias{gf.PE_ttm}
\alias{gf.ln_PE_ttm}
\alias{gf.PS_lyr}
\alias{gf.PS_ttm}
\alias{gf.PCF_lyr}
\alias{gf.PCF_ttm}
\alias{gf.PB_lyr}
\alias{gf.PB_mrq}
\alias{gf.ln_PB_mrq}
\alias{gf.BP_mrq}
\alias{gf.EP_ttm}
\alias{gf.CFP_ttm}
\alias{gf.G_MLL_Q}
\alias{gf.G_OCF_Q}
\alias{gf.G_OCF}
\alias{gf.G_SCF_Q}
\alias{gf.G_SCF}
\alias{gf.G_ROE_Q}
\alias{gf.G_EPS_Q}
\alias{gf.G_scissor_Q}
\alias{gf.G_NP_Q}
\alias{gf.G_NP_ttm}
\alias{gf.G_NPcut_Q}
\alias{gf.GG_NP_Q}
\alias{gf.G_OR_Q}
\alias{gf.GG_OR_Q}
\alias{gf.stable_growth}
\alias{gf.F_NP_chg}
\alias{gf.F_PE}
\alias{gf.ln_F_PE}
\alias{gf.F_ROE}
\alias{gf.F_rank_chg}
\alias{gf.F_target_rtn}
\alias{gf.liquidity}
\alias{gf.ILLIQ}
\alias{gf.beta}
\alias{gf.IVR}
\alias{gf.volatility}
\alias{gf.disposition}
\alias{gf.dividendyield}
\alias{gf.High3Managers}
\alias{gf.pio_f_score}
\title{get factor functions}
\usage{
gf.mkt_cap(TS)

gf.float_cap(TS)

gf.ln_mkt_cap(TS)

gf.ln_float_cap(TS)

gf.NP_YOY(TS, is1q = TRUE, filt = 1e+07, rm_neg = FALSE, src = c("all",
  "fin"), clear_result = TRUE)

gf.pct_chg_per(TS, N = 60)

gf.totalshares(TS)

gf.totalmarketvalue(TS)

gf.floatMarketValue(TS)

gf.PE_lyr(TS, fillna = TRUE)

gf.PE_ttm(TS, fillna = TRUE)

gf.ln_PE_ttm(TS)

gf.PS_lyr(TS, fillna = TRUE)

gf.PS_ttm(TS, fillna = TRUE)

gf.PCF_lyr(TS, fillna = TRUE)

gf.PCF_ttm(TS, fillna = TRUE)

gf.PB_lyr(TS, fillna = TRUE)

gf.PB_mrq(TS, fillna = TRUE)

gf.ln_PB_mrq(TS)

gf.BP_mrq(TS)

gf.EP_ttm(TS)

gf.CFP_ttm(TS)

gf.G_MLL_Q(TS)

gf.G_OCF_Q(TS, filt = 0)

gf.G_OCF(TS, filt = 0)

gf.G_SCF_Q(TS, filt = 0)

gf.G_SCF(TS, filt = 0)

gf.G_ROE_Q(TS, filt = 1e+07)

gf.G_EPS_Q(TS, filt = 1e+07)

gf.G_scissor_Q(TS, filt = 1e+07)

gf.G_NP_Q(TS, filt = 1e+07)

gf.G_NP_ttm(TS, filt = 1e+07)

gf.G_NPcut_Q(TS, filt = 1e+07)

gf.GG_NP_Q(TS, filt = 1e+07)

gf.G_OR_Q(TS, filt = 1e+08)

gf.GG_OR_Q(TS, filt = 1e+08)

gf.stable_growth(TS, N = 12, freq = "q", stat = "mean/sd", rm_N = 6)

gf.F_NP_chg(TS, span = "w13", con_type = "1")

gf.F_PE(TS, con_type = "1")

gf.ln_F_PE(TS, con_type = "1")

gf.F_ROE(TS, con_type = "1")

gf.F_rank_chg(TS, lag = 60, con_type = "1")

gf.F_target_rtn(TS, con_type = "1")

gf.liquidity(TS, nwin = c(22, 66, 250), wgt = c(0.35, 0.35, 0.3),
  datasrc = defaultDataSRC())

gf.ILLIQ(TS, nwin = 22, datasrc = defaultDataSRC())

gf.beta(TS, nwin = 240, indexID = "EI801003", datasrc = defaultDataSRC())

gf.IVR(TS, nwin = 22, datasrc = defaultDataSRC())

gf.volatility(TS, nwin = 60)

gf.disposition(TS, nwin = 66, datasrc = defaultDataSRC())

gf.dividendyield(TS, datasrc = c("ts", "jy", "wind"))

gf.High3Managers(TS)

gf.pio_f_score(TS)
}
\arguments{
\item{TS}{a \bold{TS} object}

\item{is1q}{logic. if TRUE(the default), return the single quarter data, else a cummuliated data.}
}
\value{
a \bold{TSF} object
}
\description{
get factor functions
}
\author{
han.qian

han.qian
}
